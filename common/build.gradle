plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
}
archivesBaseName = getArtifactId("common")

architectury {
    common(project.enabledPlatforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/hexmapping.accesswidener")
}

repositories {
    flatDir {
        dir 'libs'
    }
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${project.fabricLoaderVersion}"
    modApi "dev.architectury:architectury:${project.architecturyVersion}"

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2' // for @Nonnull

    modCompileOnly("at.petra-k.hexcasting:hexcasting-common-${project.minecraftVersion}:${project.hexcastingVersion}") {
        transitive = false
    }
    compileOnly "at.petra-k.paucal:paucal-common-$minecraftVersion:$paucalVersion"
    compileOnly "vazkii.patchouli:Patchouli-xplat:$minecraftVersion-$patchouliVersion-SNAPSHOT"
    compileOnly "com.samsthenerd.inline:inline-forge:$minecraftVersion-$inlineVersion"

    modCompileOnly "${modID}:moreiotas-common:1.20.1-0.1.0-5"

    modCompileOnly "maven.modrinth:pl3xmap:${rootProject.pl3xmap_version}"
    modCompileOnly "us.dynmap:DynmapCoreAPI:${rootProject.dynmap_version}"
    modCompileOnly "maven.modrinth:dynmap:IIQSYMHC"
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = project.archivesBaseName
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}

repositories {
    mavenCentral()
}
